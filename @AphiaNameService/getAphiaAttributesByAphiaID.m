function xReturn = getAphiaAttributesByAphiaID(obj,id,include_inherited)
%getAphiaAttributesByAphiaID(obj,id,include_inherited)
%
%   <strong>Get a list of attributes for a given AphiaID</strong>
%   		<br />Parameters:
%   		<ul>
%   			<li><u>id</u>: The AphiaID to search for</li>
%   			<li><u>include_inherited</u>: Include attributes inherited from the taxon its parent(s). Default=false</li>
%   		</ul>
%   		<br />Returns attributes that have the following structure:
%   		<br /> <ul><li>	<u><b>AphiaID</b></u> : Unique and persistent identifier within WoRMS</li><li>	<u><b>measurementTypeID</b></u> : The corresponding AttributeKey its measurementTypeID</li><li>	<u><b>measurementType</b></u> : The corresponding AttributeKey its measurementType</li><li>	<u><b>measurementValue</b></u> : The value of the measurement, fact, characteristic, or assertion</li><li>	<u><b>source_id</b></u> : The identifier for the AphiaSource for this attribute</li><li>	<u><b>reference</b></u> : The AphiaSource reference for this attribute</li><li>	<u><b>qualitystatus</b></u> : Quality status of the record. Possible values: 'checked', 'trusted' or 'unreviewed'. See <a href='https://www.marinespecies.org/aphia.php?p=manual#topic22' target='_blank'>https://www.marinespecies.org/aphia.php?p=manual#topic22</a></li><li>	<u><b>CategoryID</b></u> : The category identifier to list possible attribute values for this attribute definition</li><li>	<u><b>AphiaID_Inherited</b></u> : The AphiaID from where this attribute is inherited</li><li>	<u><b>children</b></u> : The possible child attributes that help to describe to current attribute</li></ul>
%   
%     Input:
%       id = (int)
%       include_inherited = (boolean)
%   
%     Output:
%       return{:} = (Attribute)

% Build up the argument lists.
values = { ...
   id, ...
   include_inherited, ...
   };
names = { ...
   'id', ...
   'include_inherited', ...
   };
types = { ...
   '{http://www.w3.org/2001/XMLSchema}int', ...
   '{http://www.w3.org/2001/XMLSchema}boolean', ...
   };

% Create the message, make the call, and convert the response into a variable.
soapMessage = createSoapMessage( ...
    'http://aphia/v1.0/Attributes', ...
    'getAphiaAttributesByAphiaID', ...
    values,names,types,'rpc');
response = callSoapService( ...
    obj.endpoint, ...
    'getAphiaAttributesByAphiaID', ...
    soapMessage);
xReturn = parseSoapResponse(response);

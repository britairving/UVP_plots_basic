function xReturn = getAphiaRecords(obj,scientificname,like,fuzzy,marine_only,offset)
%getAphiaRecords(obj,scientificname,like,fuzzy,marine_only,offset)
%
%   <strong>Get one or more matching (max. 50) AphiaRecords for a given name</strong>
%   		<br/>Parameters:
%   		<ul>
%   			<li><u>like</u>: Add a '%'-sign added after the ScientificName (SQL LIKE function). Default=true</li>
%   			<li><u>fuzzy</u>: This parameter is deprecated (and ignored since '2013-07-17'). Please use the function matchAphiaRecordsByNames() for fuzzy/near matching</li>
%   			<li><u>marine_only</u>: Limit to marine taxa. Default=true</li>
%   			<li><u>offset</u>: Starting recordnumber, when retrieving next chunk of (50) records. Default=1</li>
%   		</ul>
%   		<br /> For the structure of the returned AphiaRecords, please refer to the function getAphiaRecordByID()
%   
%     Input:
%       scientificname = (string)
%       like = (boolean)
%       fuzzy = (boolean)
%       marine_only = (boolean)
%       offset = (int)
%   
%     Output:
%       return{:} = (AphiaRecord)

% Build up the argument lists.
values = { ...
   scientificname, ...
   like, ...
   fuzzy, ...
   marine_only, ...
   offset, ...
   };
names = { ...
   'scientificname', ...
   'like', ...
   'fuzzy', ...
   'marine_only', ...
   'offset', ...
   };
types = { ...
   '{http://www.w3.org/2001/XMLSchema}string', ...
   '{http://www.w3.org/2001/XMLSchema}boolean', ...
   '{http://www.w3.org/2001/XMLSchema}boolean', ...
   '{http://www.w3.org/2001/XMLSchema}boolean', ...
   '{http://www.w3.org/2001/XMLSchema}int', ...
   };

% Create the message, make the call, and convert the response into a variable.
soapMessage = createSoapMessage( ...
    'http://aphia/v1.0/AphiaRecords', ...
    'getAphiaRecords', ...
    values,names,types,'rpc');
response = callSoapService( ...
    obj.endpoint, ...
    'getAphiaRecords', ...
    soapMessage);
xReturn = parseSoapResponse(response);

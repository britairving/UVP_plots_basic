function xReturn = getAphiaRecordByExtID(obj,id,type)
%getAphiaRecordByExtID(obj,id,type)
%
%   <strong>Get the Aphia Record for a given external identifier</strong>
%   		<br />Parameters:
%   		<ul>
%   			<li><u>Type</u>: Type of external identifier to search for. The type should be one of the following values:<br/><ul><li><u>algaebase</u>: Algaebase species ID</li><li><u>bold</u>: Barcode of Life Database (BOLD) TaxID</li><li><u>dyntaxa</u>: Dyntaxa ID</li><li><u>fishbase</u>: FishBase species ID</li><li><u>iucn</u>: IUCN Red List Identifier</li><li><u>lsid</u>: Life Science Identifier</li><li><u>ncbi</u>: NCBI Taxonomy ID (Genbank)</li><li><u>tsn</u>: ITIS Taxonomic Serial Number</li><li><u>gisd</u>: Global Invasive Species Database</li></ul></li>
%   		</ul>
%   
%     Input:
%       id = (string)
%       type = (string)
%   
%     Output:
%       return = (AphiaRecord)

% Build up the argument lists.
values = { ...
   id, ...
   type, ...
   };
names = { ...
   'id', ...
   'type', ...
   };
types = { ...
   '{http://www.w3.org/2001/XMLSchema}string', ...
   '{http://www.w3.org/2001/XMLSchema}string', ...
   };

% Create the message, make the call, and convert the response into a variable.
soapMessage = createSoapMessage( ...
    'http://aphia/v1.0/AphiaRecord', ...
    'getAphiaRecordByExtID', ...
    values,names,types,'rpc');
response = callSoapService( ...
    obj.endpoint, ...
    'getAphiaRecordByExtID', ...
    soapMessage);
xReturn = parseSoapResponse(response);
